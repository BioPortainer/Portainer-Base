[
  {
    "type": 1,
    "title": "DugongCMD",
    "description": "Desktop-as-a-Service for Bioinformatics. Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/dugong:cmd",
    "privileged": true,
    "interactive": true,
    "name": "DugongCMD",
    "note": "Dugong is a powerful workstation platform especially designed for scientific computational analysis, mainly of bioinformatics and computational biology, that can be installed in any computational ecosystem, regardless of the operating system and hardware used. In general terms, it's a Linux system designed specifically for the development of the Open Science concept, based on the reproducibility and replicability of the research. </br></br> It's an implementation built under the MIT license using the Docker platform, an open-source project that automates the implementation of applications within software containers, providing an additional layer of abstraction and automation of operating system-level virtualization on Linux. Docker uses the Linux kernel resource isolation features, such as cgroups and namespaces, as well as the file system AuFS (advanced multi layered unification filesystem) to allow independent containers to run in a single Linux instance, avoiding an overload of initialization and maintenance of virtual machines. The Dugong project enables efficient creation of reusable containers for bioinformatics data, making the analysis environment and all computational results reproducible by the scientific community. </br></br> Dugong is based on version 16.04 of Ubuntu Image, the only Docker system focused on bioinformatics that provides users with a complete graphical user interface (GUI) XFCE4, independent of the host, which should facilitate user interaction with different computing ecosystems, as well as the installation and use of different bioinformatics software. For the distribution of bioinformatics software, two large open source projects have been integrated Dugong: LinuxBrew and BioConda, totaling over 3,500 bioinformatics packages and their respective dependencies. Dugong is the only system focused on bioinformatics that offers Anaconda Navigator, a graphical package manager for Conda and the BioConda repository, allowing the installation of packages and tools through its graphical interface. We also added, as an alternative, the BioLinux and CloudBioLinux project repositories for the installation of DEB packages through the APT command. </br></br> Thinking about the replicability and reproducibility of different lines of research that benefit from bioinformatics analysis, Dugong is the only tool of its kind that provides Jupyter Notebook installed by default on all their versions. </br></br> All of these features, among others, make Dugong one of the most complete Docker desktop environments available today, and allow any user with minimal computing knowledge to run a Dugong container in high performance computing (HPC) environments, Virtual Private Server (VPS), as well as in private, public, or hybrid cloud computing environments of different commercial service providers. </br></br> The Dugong project is publicly committed to the principles of open source software development, where people are encouraged to use free software, study how they function, improve and distribute them freely. </br></br> <hr> <img src=https://raw.githubusercontent.com/DugongBioinformatics/dugongbioinformatics.github.io/master/.misc/Dugong%20-%20images%20paper.png> </br></br> Through the simple Docker Client commands, the user can download the Dugong images <b>(a)</b>, and install and manage the containers generated using the Docker Daemon on the host computer <b>(b)</b>. The Dugong image is currently available in Docker Hub <b>(c)</b>, containing more than 3000 bioinformatics software and its dependencies thanks to the integration of the BioConda and LinuxBrew projects <b>(d)</b>. </br></br> Among the software that can be installed in Dugong, and enjoy its graphical interface XFCE4, are: Blast2GO, UGene, Apache Taverna, Integrative Genomics Viewer (IGV), Mauve, RStudio, Cytoscape, QIIME <b>(e)</b>, among others. Some of these software are already functional in a Dugong image in our GitHub repository. </br></br> <hr> <b>How to cite:</b> </br></br> Menegidio, F.B. et al. (2018). Dugong: a Docker image, based on Ubuntu Linux, focused on reproducibility and replicability for bioinformatics analyses. Bioinformatics 34(3):514-515. doi: 10.1093/bioinformatics/btx554. </br></br> <hr> <b>Learn More:</b> </br></br> <a href=https://dugongbioinformatics.github.io/>https://dugongbioinformatics.github.io/</a>",
    "ports": [
      "3000/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": [{ "container": "/headless/data"}]
  },
  {
    "type": 1,
    "title": "DugongGUI XFCE4",
    "description": "Desktop-as-a-Service for Bioinformatics. Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/dugong:xfce4",
    "privileged": true,
    "interactive": true,
    "name": "DugongGUI XFCE4",
    "note": "Dugong is a powerful workstation platform especially designed for scientific computational analysis, mainly of bioinformatics and computational biology, that can be installed in any computational ecosystem, regardless of the operating system and hardware used. In general terms, it's a Linux system designed specifically for the development of the Open Science concept, based on the reproducibility and replicability of the research. </br></br> It's an implementation built under the MIT license using the Docker platform, an open-source project that automates the implementation of applications within software containers, providing an additional layer of abstraction and automation of operating system-level virtualization on Linux. Docker uses the Linux kernel resource isolation features, such as cgroups and namespaces, as well as the file system AuFS (advanced multi layered unification filesystem) to allow independent containers to run in a single Linux instance, avoiding an overload of initialization and maintenance of virtual machines. The Dugong project enables efficient creation of reusable containers for bioinformatics data, making the analysis environment and all computational results reproducible by the scientific community. </br></br> Dugong is based on version 16.04 of Ubuntu Image, the only Docker system focused on bioinformatics that provides users with a complete graphical user interface (GUI) XFCE4, independent of the host, which should facilitate user interaction with different computing ecosystems, as well as the installation and use of different bioinformatics software. For the distribution of bioinformatics software, two large open source projects have been integrated Dugong: LinuxBrew and BioConda, totaling over 3,500 bioinformatics packages and their respective dependencies. Dugong is the only system focused on bioinformatics that offers Anaconda Navigator, a graphical package manager for Conda and the BioConda repository, allowing the installation of packages and tools through its graphical interface. We also added, as an alternative, the BioLinux and CloudBioLinux project repositories for the installation of DEB packages through the APT command. </br></br> Thinking about the replicability and reproducibility of different lines of research that benefit from bioinformatics analysis, Dugong is the only tool of its kind that provides Jupyter Notebook installed by default on all their versions. </br></br> All of these features, among others, make Dugong one of the most complete Docker desktop environments available today, and allow any user with minimal computing knowledge to run a Dugong container in high performance computing (HPC) environments, Virtual Private Server (VPS), as well as in private, public, or hybrid cloud computing environments of different commercial service providers. </br></br> The Dugong project is publicly committed to the principles of open source software development, where people are encouraged to use free software, study how they function, improve and distribute them freely. </br></br> <hr> <img src=https://raw.githubusercontent.com/DugongBioinformatics/dugongbioinformatics.github.io/master/.misc/Dugong%20-%20images%20paper.png> </br></br> Through the simple Docker Client commands, the user can download the Dugong images <b>(a)</b>, and install and manage the containers generated using the Docker Daemon on the host computer <b>(b)</b>. The Dugong image is currently available in Docker Hub <b>(c)</b>, containing more than 3000 bioinformatics software and its dependencies thanks to the integration of the BioConda and LinuxBrew projects <b>(d)</b>. </br></br> Among the software that can be installed in Dugong, and enjoy its graphical interface XFCE4, are: Blast2GO, UGene, Apache Taverna, Integrative Genomics Viewer (IGV), Mauve, RStudio, Cytoscape, QIIME <b>(e)</b>, among others. Some of these software are already functional in a Dugong image in our GitHub repository. </br></br> <hr> <b>How to cite:</b> </br></br> Menegidio, F.B. et al. (2018). Dugong: a Docker image, based on Ubuntu Linux, focused on reproducibility and replicability for bioinformatics analyses. Bioinformatics 34(3):514-515. doi: 10.1093/bioinformatics/btx554. </br></br> <hr> <b>Learn More:</b> </br></br> <a href=https://dugongbioinformatics.github.io/>https://dugongbioinformatics.github.io/</a>",
    "ports": [
      "6901/tcp", "5901/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": [{ "container": "/headless/data"}]
  },
  {
    "type": 1,
    "title": "DugongGUI IceWM",
    "description": "Desktop-as-a-Service for Bioinformatics. Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/dugong:icewm",
    "privileged": true,
    "interactive": true,
    "name": "DugongGUI IceWM",
    "note": "Dugong is a powerful workstation platform especially designed for scientific computational analysis, mainly of bioinformatics and computational biology, that can be installed in any computational ecosystem, regardless of the operating system and hardware used. In general terms, it's a Linux system designed specifically for the development of the Open Science concept, based on the reproducibility and replicability of the research. </br></br> It's an implementation built under the MIT license using the Docker platform, an open-source project that automates the implementation of applications within software containers, providing an additional layer of abstraction and automation of operating system-level virtualization on Linux. Docker uses the Linux kernel resource isolation features, such as cgroups and namespaces, as well as the file system AuFS (advanced multi layered unification filesystem) to allow independent containers to run in a single Linux instance, avoiding an overload of initialization and maintenance of virtual machines. The Dugong project enables efficient creation of reusable containers for bioinformatics data, making the analysis environment and all computational results reproducible by the scientific community. </br></br> Dugong is based on version 16.04 of Ubuntu Image, the only Docker system focused on bioinformatics that provides users with a complete graphical user interface (GUI) XFCE4, independent of the host, which should facilitate user interaction with different computing ecosystems, as well as the installation and use of different bioinformatics software. For the distribution of bioinformatics software, two large open source projects have been integrated Dugong: LinuxBrew and BioConda, totaling over 3,500 bioinformatics packages and their respective dependencies. Dugong is the only system focused on bioinformatics that offers Anaconda Navigator, a graphical package manager for Conda and the BioConda repository, allowing the installation of packages and tools through its graphical interface. We also added, as an alternative, the BioLinux and CloudBioLinux project repositories for the installation of DEB packages through the APT command. </br></br> Thinking about the replicability and reproducibility of different lines of research that benefit from bioinformatics analysis, Dugong is the only tool of its kind that provides Jupyter Notebook installed by default on all their versions. </br></br> All of these features, among others, make Dugong one of the most complete Docker desktop environments available today, and allow any user with minimal computing knowledge to run a Dugong container in high performance computing (HPC) environments, Virtual Private Server (VPS), as well as in private, public, or hybrid cloud computing environments of different commercial service providers. </br></br> The Dugong project is publicly committed to the principles of open source software development, where people are encouraged to use free software, study how they function, improve and distribute them freely. </br></br> <hr> <img src=https://raw.githubusercontent.com/DugongBioinformatics/dugongbioinformatics.github.io/master/.misc/Dugong%20-%20images%20paper.png> </br></br> Through the simple Docker Client commands, the user can download the Dugong images <b>(a)</b>, and install and manage the containers generated using the Docker Daemon on the host computer <b>(b)</b>. The Dugong image is currently available in Docker Hub <b>(c)</b>, containing more than 3000 bioinformatics software and its dependencies thanks to the integration of the BioConda and LinuxBrew projects <b>(d)</b>. </br></br> Among the software that can be installed in Dugong, and enjoy its graphical interface XFCE4, are: Blast2GO, UGene, Apache Taverna, Integrative Genomics Viewer (IGV), Mauve, RStudio, Cytoscape, QIIME <b>(e)</b>, among others. Some of these software are already functional in a Dugong image in our GitHub repository. </br></br> <hr> <b>How to cite:</b> </br></br> Menegidio, F.B. et al. (2018). Dugong: a Docker image, based on Ubuntu Linux, focused on reproducibility and replicability for bioinformatics analyses. Bioinformatics 34(3):514-515. doi: 10.1093/bioinformatics/btx554. </br></br> <hr> <b>Learn More:</b> </br></br> <a href=https://dugongbioinformatics.github.io/>https://dugongbioinformatics.github.io/</a>",
    "ports": [
      "6901/tcp", "5901/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": [{ "container": "/headless/data"}]
  },
{
    "type": 1,
    "title": "DugongClean CMD",
    "description": "Desktop-as-a-Service for Bioinformatics. Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/clean:cmd",
    "privileged": true,
    "interactive": true,
    "name": "DugongClean CMD",
    "note": "Dugong is a powerful workstation platform especially designed for scientific computational analysis, mainly of bioinformatics and computational biology, that can be installed in any computational ecosystem, regardless of the operating system and hardware used. In general terms, it's a Linux system designed specifically for the development of the Open Science concept, based on the reproducibility and replicability of the research. </br></br> It's an implementation built under the MIT license using the Docker platform, an open-source project that automates the implementation of applications within software containers, providing an additional layer of abstraction and automation of operating system-level virtualization on Linux. Docker uses the Linux kernel resource isolation features, such as cgroups and namespaces, as well as the file system AuFS (advanced multi layered unification filesystem) to allow independent containers to run in a single Linux instance, avoiding an overload of initialization and maintenance of virtual machines. The Dugong project enables efficient creation of reusable containers for bioinformatics data, making the analysis environment and all computational results reproducible by the scientific community. </br></br> Dugong is based on version 16.04 of Ubuntu Image, the only Docker system focused on bioinformatics that provides users with a complete graphical user interface (GUI) XFCE4, independent of the host, which should facilitate user interaction with different computing ecosystems, as well as the installation and use of different bioinformatics software. For the distribution of bioinformatics software, two large open source projects have been integrated Dugong: LinuxBrew and BioConda, totaling over 3,500 bioinformatics packages and their respective dependencies. Dugong is the only system focused on bioinformatics that offers Anaconda Navigator, a graphical package manager for Conda and the BioConda repository, allowing the installation of packages and tools through its graphical interface. We also added, as an alternative, the BioLinux and CloudBioLinux project repositories for the installation of DEB packages through the APT command. </br></br> Thinking about the replicability and reproducibility of different lines of research that benefit from bioinformatics analysis, Dugong is the only tool of its kind that provides Jupyter Notebook installed by default on all their versions. </br></br> All of these features, among others, make Dugong one of the most complete Docker desktop environments available today, and allow any user with minimal computing knowledge to run a Dugong container in high performance computing (HPC) environments, Virtual Private Server (VPS), as well as in private, public, or hybrid cloud computing environments of different commercial service providers. </br></br> The Dugong project is publicly committed to the principles of open source software development, where people are encouraged to use free software, study how they function, improve and distribute them freely. </br></br> <hr> <img src=https://raw.githubusercontent.com/DugongBioinformatics/dugongbioinformatics.github.io/master/.misc/Dugong%20-%20images%20paper.png> </br></br> Through the simple Docker Client commands, the user can download the Dugong images <b>(a)</b>, and install and manage the containers generated using the Docker Daemon on the host computer <b>(b)</b>. The Dugong image is currently available in Docker Hub <b>(c)</b>, containing more than 3000 bioinformatics software and its dependencies thanks to the integration of the BioConda and LinuxBrew projects <b>(d)</b>. </br></br> Among the software that can be installed in Dugong, and enjoy its graphical interface XFCE4, are: Blast2GO, UGene, Apache Taverna, Integrative Genomics Viewer (IGV), Mauve, RStudio, Cytoscape, QIIME <b>(e)</b>, among others. Some of these software are already functional in a Dugong image in our GitHub repository. </br></br> <hr> <b>How to cite:</b> </br></br> Menegidio, F.B. et al. (2018). Dugong: a Docker image, based on Ubuntu Linux, focused on reproducibility and replicability for bioinformatics analyses. Bioinformatics 34(3):514-515. doi: 10.1093/bioinformatics/btx554. </br></br> <hr> <b>Learn More:</b> </br></br> <a href=https://dugongbioinformatics.github.io/>https://dugongbioinformatics.github.io/</a>",
    "ports": [
      "3000/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": [{ "container": "/headless/data"}]
  },
  {
    "type": 1,
    "title": "DugongClean XFCE4",
    "description": "Desktop-as-a-Service for Bioinformatics. Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/clean:xfce4",
    "privileged": true,
    "interactive": true,
    "name": "DugongClean XFCE4",
    "note": "Dugong is a powerful workstation platform especially designed for scientific computational analysis, mainly of bioinformatics and computational biology, that can be installed in any computational ecosystem, regardless of the operating system and hardware used. In general terms, it's a Linux system designed specifically for the development of the Open Science concept, based on the reproducibility and replicability of the research. </br></br> It's an implementation built under the MIT license using the Docker platform, an open-source project that automates the implementation of applications within software containers, providing an additional layer of abstraction and automation of operating system-level virtualization on Linux. Docker uses the Linux kernel resource isolation features, such as cgroups and namespaces, as well as the file system AuFS (advanced multi layered unification filesystem) to allow independent containers to run in a single Linux instance, avoiding an overload of initialization and maintenance of virtual machines. The Dugong project enables efficient creation of reusable containers for bioinformatics data, making the analysis environment and all computational results reproducible by the scientific community. </br></br> Dugong is based on version 16.04 of Ubuntu Image, the only Docker system focused on bioinformatics that provides users with a complete graphical user interface (GUI) XFCE4, independent of the host, which should facilitate user interaction with different computing ecosystems, as well as the installation and use of different bioinformatics software. For the distribution of bioinformatics software, two large open source projects have been integrated Dugong: LinuxBrew and BioConda, totaling over 3,500 bioinformatics packages and their respective dependencies. Dugong is the only system focused on bioinformatics that offers Anaconda Navigator, a graphical package manager for Conda and the BioConda repository, allowing the installation of packages and tools through its graphical interface. We also added, as an alternative, the BioLinux and CloudBioLinux project repositories for the installation of DEB packages through the APT command. </br></br> Thinking about the replicability and reproducibility of different lines of research that benefit from bioinformatics analysis, Dugong is the only tool of its kind that provides Jupyter Notebook installed by default on all their versions. </br></br> All of these features, among others, make Dugong one of the most complete Docker desktop environments available today, and allow any user with minimal computing knowledge to run a Dugong container in high performance computing (HPC) environments, Virtual Private Server (VPS), as well as in private, public, or hybrid cloud computing environments of different commercial service providers. </br></br> The Dugong project is publicly committed to the principles of open source software development, where people are encouraged to use free software, study how they function, improve and distribute them freely. </br></br> <hr> <img src=https://raw.githubusercontent.com/DugongBioinformatics/dugongbioinformatics.github.io/master/.misc/Dugong%20-%20images%20paper.png> </br></br> Through the simple Docker Client commands, the user can download the Dugong images <b>(a)</b>, and install and manage the containers generated using the Docker Daemon on the host computer <b>(b)</b>. The Dugong image is currently available in Docker Hub <b>(c)</b>, containing more than 3000 bioinformatics software and its dependencies thanks to the integration of the BioConda and LinuxBrew projects <b>(d)</b>. </br></br> Among the software that can be installed in Dugong, and enjoy its graphical interface XFCE4, are: Blast2GO, UGene, Apache Taverna, Integrative Genomics Viewer (IGV), Mauve, RStudio, Cytoscape, QIIME <b>(e)</b>, among others. Some of these software are already functional in a Dugong image in our GitHub repository. </br></br> <hr> <b>How to cite:</b> </br></br> Menegidio, F.B. et al. (2018). Dugong: a Docker image, based on Ubuntu Linux, focused on reproducibility and replicability for bioinformatics analyses. Bioinformatics 34(3):514-515. doi: 10.1093/bioinformatics/btx554. </br></br> <hr> <b>Learn More:</b> </br></br> <a href=https://dugongbioinformatics.github.io/>https://dugongbioinformatics.github.io/</a>",
    "ports": [
      "6901/tcp", "5901/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": [{ "container": "/headless/data"}]
  },
  {
    "type": 1,
    "title": "DugongClean IceWM",
    "description": "Desktop-as-a-Service for Bioinformatics. Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/clean:icewm",
    "privileged": true,
    "interactive": true,
    "name": "DugongClean IceWM",
    "note": "Dugong is a powerful workstation platform especially designed for scientific computational analysis, mainly of bioinformatics and computational biology, that can be installed in any computational ecosystem, regardless of the operating system and hardware used. In general terms, it's a Linux system designed specifically for the development of the Open Science concept, based on the reproducibility and replicability of the research. </br></br> It's an implementation built under the MIT license using the Docker platform, an open-source project that automates the implementation of applications within software containers, providing an additional layer of abstraction and automation of operating system-level virtualization on Linux. Docker uses the Linux kernel resource isolation features, such as cgroups and namespaces, as well as the file system AuFS (advanced multi layered unification filesystem) to allow independent containers to run in a single Linux instance, avoiding an overload of initialization and maintenance of virtual machines. The Dugong project enables efficient creation of reusable containers for bioinformatics data, making the analysis environment and all computational results reproducible by the scientific community. </br></br> Dugong is based on version 16.04 of Ubuntu Image, the only Docker system focused on bioinformatics that provides users with a complete graphical user interface (GUI) XFCE4, independent of the host, which should facilitate user interaction with different computing ecosystems, as well as the installation and use of different bioinformatics software. For the distribution of bioinformatics software, two large open source projects have been integrated Dugong: LinuxBrew and BioConda, totaling over 3,500 bioinformatics packages and their respective dependencies. Dugong is the only system focused on bioinformatics that offers Anaconda Navigator, a graphical package manager for Conda and the BioConda repository, allowing the installation of packages and tools through its graphical interface. We also added, as an alternative, the BioLinux and CloudBioLinux project repositories for the installation of DEB packages through the APT command. </br></br> Thinking about the replicability and reproducibility of different lines of research that benefit from bioinformatics analysis, Dugong is the only tool of its kind that provides Jupyter Notebook installed by default on all their versions. </br></br> All of these features, among others, make Dugong one of the most complete Docker desktop environments available today, and allow any user with minimal computing knowledge to run a Dugong container in high performance computing (HPC) environments, Virtual Private Server (VPS), as well as in private, public, or hybrid cloud computing environments of different commercial service providers. </br></br> The Dugong project is publicly committed to the principles of open source software development, where people are encouraged to use free software, study how they function, improve and distribute them freely. </br></br> <hr> <img src=https://raw.githubusercontent.com/DugongBioinformatics/dugongbioinformatics.github.io/master/.misc/Dugong%20-%20images%20paper.png> </br></br> Through the simple Docker Client commands, the user can download the Dugong images <b>(a)</b>, and install and manage the containers generated using the Docker Daemon on the host computer <b>(b)</b>. The Dugong image is currently available in Docker Hub <b>(c)</b>, containing more than 3000 bioinformatics software and its dependencies thanks to the integration of the BioConda and LinuxBrew projects <b>(d)</b>. </br></br> Among the software that can be installed in Dugong, and enjoy its graphical interface XFCE4, are: Blast2GO, UGene, Apache Taverna, Integrative Genomics Viewer (IGV), Mauve, RStudio, Cytoscape, QIIME <b>(e)</b>, among others. Some of these software are already functional in a Dugong image in our GitHub repository. </br></br> <hr> <b>How to cite:</b> </br></br> Menegidio, F.B. et al. (2018). Dugong: a Docker image, based on Ubuntu Linux, focused on reproducibility and replicability for bioinformatics analyses. Bioinformatics 34(3):514-515. doi: 10.1093/bioinformatics/btx554. </br></br> <hr> <b>Learn More:</b> </br></br> <a href=https://dugongbioinformatics.github.io/>https://dugongbioinformatics.github.io/</a>",
    "ports": [
      "6901/tcp", "5901/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": [{ "container": "/headless/data"}]
  },
  {
    "type": 1,
    "title": "Galaxy Stable",
    "description": "Galaxy Docker Image Stable.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-stable",
    "name": "Galaxy Stable",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: UseGalaxy.org",
    "description": "Galaxy Docker repository with tools from usegalaxy.org (UseGalaxy.org flavour).",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/usegalaxy",
    "name": "Galaxy: UseGalaxy.org",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Workflow4Metabolomics",
    "description": "Galaxy Docker Image Workflow4Metabolomics flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "workflow4metabolomics/galaxy-workflow4metabolomics",
    "name": "Galaxy: Workflow4Metabolomics",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: RNA workbench",
    "description": "Galaxy Docker Image RNA workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-rna-workbench",
    "name": "Galaxy: RNA workbench",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: NCBI-Blast",
    "description": "Galaxy Docker Image NCBI-Blast flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-blast",
    "name": "Galaxy: NCBI-Blast",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Ballaxy",
    "description": "Galaxy Docker Image Ballaxy flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "anhi/ballaxy",
    "name": "Galaxy: Ballaxy",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: DeepTools",
    "description": "Galaxy Docker Image DeepTools flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-deeptools",
    "name": "Galaxy: DeepTools",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: ChIP-exo Workbench",
    "description": "Galaxy Docker Image ChIP-exo Workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "gregvonkuster/docker-galaxy-chip-exo",
    "name": "Galaxy: ChIP-exo Workbench",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Proteomics",
    "description": "Galaxy Docker Image Proteomics Workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxyp",
    "name": "Galaxy: Proteomics",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: NGS Preprocessing",
    "description": "Galaxy Docker Image NGS Preprocessing flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-ngs-preprocessing",
    "name": "Galaxy: NGS Preprocessing",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: MPI for Evolutionary Biology",
    "description": "Galaxy Docker Image MPI for Evolutionary Biology flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-ploen",
    "name": "Galaxy: MPI for Evolutionary Biology",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Cheminformatics workbench",
    "description": "Galaxy Docker Image Cheminformatics workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-chemicaltoolbox",
    "name": "Galaxy: Cheminformatics workbench",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Epigenetics workbench",
    "description": "Galaxy Docker Image Epigenetics workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-epigenetics",
    "name": "Galaxy: Epigenetics workbench",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Machine Learning",
    "description": "Galaxy Docker Image Machine Learning flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-machine-learning",
    "name": "Galaxy: Machine Learning",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Molecular Phylogenetics",
    "description": "Galaxy Docker Image Molecular Phylogenetics flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-phylogenetics",
    "name": "Galaxy: Molecular Phylogenetics",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Protease Predictions",
    "description": "Galaxy Docker Image Protease Predictions flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-protease-prediction",
    "name": "Galaxy: Protease Predictions",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Metagenomics Workbench",
    "description": "Galaxy Docker Image Metagenomics Workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-metagenomics",
    "name": "Galaxy: Metagenomics Workbench",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: DESeq2 Workbench",
    "description": "Galaxy Docker Image DESeq2 Workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-deseq2",
    "name": "Galaxy: DESeq2 Workbench",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Sequence Tools",
    "description": "Galaxy Docker Image Sequence Tools flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-sequence-tools",
    "name": "Galaxy: Sequence Tools",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Exome Seq",
    "description": "Galaxy Docker Image Exome Seq flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-exome-seq",
    "name": "Galaxy: Exome Seq",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: RNA Structural Analysis",
    "description": "Galaxy Docker Image RNA Structural Analysis flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-rna-structural-analysis",
    "name": "Galaxy: RNA Structural Analysis",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Genome Annotation",
    "description": "Galaxy Docker Image Genome Annotation flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-genome-annotation",
    "name": "Galaxy: Genome Annotation",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: Image Analysis",
    "description": "Galaxy Docker Image Imaging Analysis flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-imaging",
    "name": "Galaxy: Image Analysis",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: MUMmer 3",
    "description": "Galaxy Docker Image MUMmer 3 flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-mummer",
    "name": "Galaxy: MUMmer 3",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy: RNA-Seq",
    "description": "Galaxy Docker Image RNA-Seq flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-rna-seq",
    "name": "Galaxy: RNA-Seq",
    "note": "none",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install",
        "select": [
          {
            "text": "Yes, I agree",
            "value": "True",
            "default": true
          },
          {
            "text": "No, I disagree",
            "value": "False"
          }
        ],
        "description": "Enables the Test Tool Shed during container startup. This change is not persistent."
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging",
        "description": "Enables for verbose logging at Docker stdout.",
        "default": "full" 
      },
      {
        "name": "BARE",
        "label": "Disable All tools",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Disables all default Galaxy tools."
      },
      {
        "name": "NONUSE",
        "label": "Disable Services",
        "description": "Disable services during container startup. Currently, nodejs, postgres, proftp, reports, slurmd and slurmctld are supported."
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes",
        "description": "Set the number of uwsgi processes.",
        "default": "2"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads",
        "description": "Set the number of uwsgi threads.",
        "default": "4"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Use Docker",
        "select": [
          {
            "text": "No, I disagree",
            "value": "False",
            "default": true
          },
          {
            "text": "Yes, I agree",
            "value": "True"
          }
        ],
        "description": "Enable Galaxy to use Docker containers if annotated in tools."
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volume",
        "description": "Specify volumes that should be mounted into tool containers."
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Galaxy Handler",
        "description": "Set the number of Galaxy handler.",
        "default": "2"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Opt Dependencies",
        "description": "Installing optional dependencies into the Galaxy virtual environment."
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Dev Dependencies",
        "description": "Installation of Galaxy's dev dependencies. Needs LOAD_GALAXY_CONDITIONAL_DEPENDENCIES as well"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "Galaxy Tools: IPython Notebook",
    "description": "Docker IPython Container",
    "categories": ["Galaxy Tools"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/docker-ipython-notebook",
    "name": "Galaxy Tools: IPython Notebook",
    "note": "none",
    "ports": [
      "6789/tcp"
    ],
    "volumes": [{ "container": "/import/"}]
  },
  {
    "type": 1,
    "title": "Galaxy Tools: Jupyter Notebook",
    "description": "Docker Jupyter Container",
    "categories": ["Galaxy Tools"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/docker-jupyter-notebook",
    "name": "Galaxy Tools: Jupyter Notebook",
    "note": "none",
    "ports": [
      "8888/tcp"
    ],
    "volumes": [{ "container": "/import/"}]
  },
  {
    "type": 1,
    "title": "Galaxy Tools: Planemo",
    "description": "Docker Planemo Container",
    "categories": ["Galaxy Tools"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/planemo",
    "name": "Galaxy Tools: Planemo",
    "note": "none",
    "ports": [
      "7777/tcp"
    ],
    "volumes": [{ "container": "/galaxy-central/"}]
  },
  {
    "type": 1,
    "title": "Jupyter Notebook: Base",
    "description": "Small base image for Jupyter Notebook.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/base-notebook",
    "name": "Jupyter Notebook: Base",
    "note": "none",
    "ports": [
      "8888/tcp"
    ],
    "volumes": [{ "container": "/home/jovyan/work/"}]
  },
  {
    "type": 1,
    "title": "Jupyter Notebook: JupyterHub",
    "description": "JupyterHub: A multi-user server for Jupyter notebooks.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyterhub/jupyterhub",
    "name": "Jupyter Notebook: JupyterHub",
    "note": "none",
    "ports": [
      "8888/tcp"
    ],
    "volumes": [{ "container": "/srv/jupyterhub/"}]
  },
  {
    "type": 1,
    "title": "Jupyter Notebook: SingleUser",
    "description": "JupyterHub: A single-user server for Jupyter notebooks.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyterhub/singleuser",
    "name": "Jupyter Notebook: SingleUser",
    "note": "none",
    "ports": [
      "8888/tcp"
    ],
    "volumes": [{ "container": "/home/jovyan/work/"}]
  },
  {
    "type": 1,
    "title": "Jupyter Notebook: Minimal",
    "description": "Minimal Jupyter Notebook.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/minimal-notebook",
    "name": "Jupyter Notebook: Minimal",
    "note": "none",
    "ports": [
      "8888/tcp"
    ],
    "volumes": [{ "container": "/home/jovyan/work/"}]
  },
  {
    "type": 1,
    "title": "Jupyter Notebook: Scientific Python",
    "description": "Jupyter Notebook Scientific Python Stack.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/scipy-notebook",
    "name": "Jupyter Notebook: Scientific Python",
    "note": "none",
    "ports": [
      "8888/tcp"
    ],
    "volumes": [{ "container": "/home/jovyan/work/"}]
  },
  {
    "type": 1,
    "title": "Jupyter Notebook: All Spark",
    "description": "Jupyter Notebook Python, Scala, R, Spark, Mesos Stack.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/all-spark-notebook",
    "name": "Jupyter Notebook: All Spark",
    "note": "none",
    "ports": [
      "8888/tcp"
    ],
    "volumes": [{ "container": "/home/jovyan/work/"}]
  },
  {
    "type": 1,
    "title": "Jupyter Notebook: Data Science",
    "description": "Jupyter Notebook Data Science.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/datascience-notebook",
    "name": "Jupyter Notebook: Data Science",
    "note": "none",
    "ports": [
      "8888/tcp"
    ],
    "volumes": [{ "container": "/home/jovyan/work/"}]
  },
  {
    "type": 1,
    "title": "Jupyter Notebook: Tensorflow",
    "description": "Jupyter Notebook Scientific Python Stack Tensorflow.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/tensorflow-notebook",
    "name": "Jupyter Notebook: Tensorflow",
    "note": "none",
    "ports": [
      "8888/tcp"
    ],
    "volumes": [{ "container": "/home/jovyan/work/"}]
  },
  {
    "type": 1,
    "title": "Jupyter Notebook: Viewer",
    "description": "Jupyter Notebook Viewer.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/nbviewer",
    "name": "Jupyter Notebook: Viewer",
    "note": "none",
    "ports": [
      "8888/tcp"
    ],
    "volumes": [{ "container": "/home/jovyan/work/"}]
  },
  {
    "type": 1,
    "title": "GUIdock",
    "description": "Delivering GUI Display from Docker.",
    "categories": ["GUIdock Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_guidock.png",
    "image": "biodepot/guidock",
    "name": "GUIdock",
    "note": "none",
    "ports": [
      "3000/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "GUIdock: noVNC",
    "description": "Delivering GUI Display from Docker.",
    "categories": ["GUIdock Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_guidock.png",
    "image": "biodepot/guidock_novnc",
    "name": "GUIdock: noVNC",
    "note": "none",
    "ports": [
      "6080/tcp"
    ],
    "volumes": [{ "container": "/export/"}]
  },
  {
    "type": 1,
    "title": "R: Base",
    "description": "R is a system for statistical computation and graphics.",
    "categories": ["R Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_R.png",
    "image": "r-base",
    "name": "R: Base",
    "note": "none"
  },
  {
    "type": 1,
    "title": "R: RStudio",
    "description": "RStudio Server image.",
    "categories": ["R Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_R.png",
    "image": "rocker/rstudio",
    "name": "R: RStudio",
    "note": "none",
    "ports": [
      "8787/tcp", "3838/tcp"
    ],
    "volumes": [{ "container": "/home/rstudio"}]
  },
  {
    "type": 1,
    "title": "R: Shiny",
    "description": "Shiny Server image.",
    "categories": ["R Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_R.png",
    "image": "rocker/shiny",
    "name": "R: Shiny",
    "note": "none",
    "ports": [
      "3838/tcp"
    ],
    "volumes": [{ "container": "/srv/shiny-server/"}]
  },
  {
    "type": 1,
    "title": "Bioconductor: Base",
    "description": "Bioconductor: Base image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_base2",
    "name": "Bioconductor: Base",
    "note": "none"
  },
  {
    "type": 1,
    "title": "Bioconductor: Core",
    "description": "Bioconductor: Core image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_core2",
    "name": "Bioconductor: Core",
    "note": "none"
  },
  {
    "type": 1,
    "title": "Bioconductor: Flow Cytometry",
    "description": "Bioconductor: Flow Cytometry image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_flow",
    "name": "Bioconductor: Flow Cytometry",
    "note": "none"
  },
  {
    "type": 1,
    "title": "Bioconductor: Microarray Packages",
    "description": "Bioconductor: Microarray Packages image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_microarray",
    "name": "Bioconductor: Microarray Packages",
    "note": "none"
  },
  {
    "type": 1,
    "title": "Bioconductor: Sequencing Packages",
    "description": "Bioconductor: Sequencing Packages image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_sequencing",
    "name": "Bioconductor: Sequencing Packages",
    "note": "none"
  },
  {
    "type": 1,
    "title": "Bioconductor: Proteomics Packages",
    "description": "Bioconductor: Proteomics Packages image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_proteomics2",
    "name": "Bioconductor: Proteomics Packages",
    "note": "none"
  },
  {
    "type": 1,
    "title": "Bioconductor: Metabolomics Packages",
    "description": "Bioconductor: Metabolomics Packages image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_metabolomics2",
    "name": "Bioconductor: Metabolomics Packages",
    "note": "none"
  },
  {
    "type": 1,
    "title": "BioContainer: Base",
    "description": "An open-source and community-driven framework for software standardization.",
    "categories": ["BioContainer Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_biocontainer.png",
    "image": "biocontainers/biocontainers",
    "volumes": ["/data", "/config"]
  }
]
